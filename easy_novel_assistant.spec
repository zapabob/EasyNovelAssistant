# -*- mode: python ; coding: utf-8 -*-
import sys
import os
from PyInstaller.utils.hooks import collect_data_files, collect_submodules

# scipyのデータファイルとサブモジュールを収集
scipy_datas = collect_data_files('scipy')
scipy_submodules = collect_submodules('scipy')

a = Analysis(
    ['easy_novel_assistant.py'],
    pathex=[],
    binaries=[],
    datas=[
        ('EasyNovelAssistant/setup/res', 'EasyNovelAssistant/setup/res'),
        ('config.json', '.'),
        ('llm.json', '.'),
        ('llm_sequence.json', '.'),
    ] + scipy_datas,
    hiddenimports=[
        'requests',
        'tkinter',
        'json',
        'tkinter.messagebox',
        'tkinter.filedialog',
        'tkinter.simpledialog',
        'tkinter.ttk',
        'PIL',
        'PIL.Image',
        'PIL.ImageTk',
        'threading',
        'webbrowser',
        'subprocess',
        'platform',
        'time',
        'datetime',
        'os',
        'sys',
        're',
        'numpy',
        'numpy.core',
        'numpy.core._methods',
        'numpy.lib.format',
        'scipy',
        'scipy.io',
        'scipy.io.wavfile',
        'scipy.sparse',
        'scipy.sparse.csgraph',
        'scipy.sparse.csgraph._validation',
        'scipy.spatial.distance',
        'scipy.linalg',
        'scipy.linalg.cython_blas',
        'scipy.linalg.cython_lapack',
        'scipy.special',
        'scipy.special._ufuncs_cxx',
        'scipy.integrate',
        'scipy.interpolate',
        'scipy.optimize',
        'scipy.stats',
        'scipy._lib',
        'scipy._lib._ccallback',
        # 追加scipy依存関係
        'scipy.fft',
        'scipy.ndimage',
        'scipy.signal',
        'scipy.cluster',
        'scipy.constants',
        'scipy.misc',
        'scipy.odr',
        'scipy.sparse.linalg',
        'scipy.spatial',
        # numpy追加依存関係
        'numpy.fft',
        'numpy.linalg',
        'numpy.random',
        'numpy.ma',
        'numpy.polynomial',
        'numpy.testing',
        # その他必須モジュール
        'encodings',
        'encodings.utf_8',
        'encodings.cp932',
        'encodings.mbcs',
        'codecs',
    ] + scipy_submodules,
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[
        'matplotlib',
        'PyQt5',
        'PyQt6',
        'PySide2',
        'PySide6',
        'IPython',
        'jupyter',
    ],
    noarchive=False,
    optimize=0,
)
pyz = PYZ(a.pure)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.datas,
    [],
    name='EasyNovelAssistant',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=True,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
    icon=None,
)
